1.What is Serialization?  
Serialization means converting data into a format that can be easily stored, transferred, or sent over a network â€” usually as JSON or XML. 
Turning complex data types (like QuerySets, Models, or objects) into simple formats (like JSON) so they can be:

Sent to the frontend (web/mobile apps)

Stored in a file or database

Exchanged between systems (via APIs)

2.Converting Django QuerySets to JSON.
serializers.py
from rest_framework import serializers
from .models import MyModel

class MyModelSerializer(serializers.ModelSerializer):
    class Meta:
        model = MyModel
        fields = '__all__'


3.Using serializers in Django REST Framework (DRF)
# models.py
from django.db import models

class Doctor(models.Model):
    name = models.CharField(max_length=100)
    specialization = models.CharField(max_length=100)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.name

# serializers.py
from rest_framework import serializers
from .models import Doctor

class DoctorSerializer(serializers.ModelSerializer):
    class Meta:
        model = Doctor
        fields = '__all__'  # or ['id', 'name', 'specialization']
# views.py
from rest_framework.decorators import api_view
from rest_framework.response import Response
from .models import Doctor
from .serializers import DoctorSerializer

@api_view(['GET'])
def doctor_list(request):
    doctors = Doctor.objects.all()
    serializer = DoctorSerializer(doctors, many=True)
    return Response(serializer.data)

